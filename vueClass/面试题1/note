1: 原型链继承：
因为子类继承父类，一般既要继承私有的，也要继承公有的；
私有的，可以通过call继承
公有的，通过原型链继承   Sun.prototype=new Father;
    本质，是把父类的实例，作为子类的原型； 核心；
缺点：
    1） 如果也用了call，导致父类私有的，即在子类私有的，也在子类公有的；
    2） 如果父类修改私有属性和方法，会影响子类公有的属性和方法
    如果子类修改公有的属性和方法，会影响父类私有的属性和方法；
2：复习面向对象的继承
- 简单的原型链继承： Sun.prototype=new Father;
  核心：把父类的实例作为子类的原型；
  缺点：
  1）当修改父类私有属性和方法的时候，子类公有的就被更改了；
  2）子类私有无法继承父类私有；
- 构造函数式继承： 本质 call继承
  核心：子类私有只继承父类私有的属性和方法；
  缺点：无法继承父类公有的属性和方法；
- 组合继承：构造函数式继承+原型链继承
  缺点：父类私有的即在子类私有的，也在子类公有的
- 寄生式组合继承：
  缺点：子类的构造函数会出问题，子类的constructor应该只想子类的构造函数，但是却指向了父类的构造函数；(通过原型链找过去的)
- 混合继承： call继承+ extends继承；
function extends(obj1,obj2){
    obj1={};
    for(var attr in obj2){
        obj[attr]=obj2[attr];
    }
    return obj1;
}
3：jsonp
1) 创建一个全局的函数  jquery12223444555555
2) 请求地址：  www.baidu.com?name=ymy&age=18&cb=jquery12223444555555
3) 需要动态的把请求地址放到script中
    1）动态创建script
    2）script.src=地址；
    3）再把script插入body底部或者是head里面

    ajax({
        url:'xxxxxx',
        data:{},
        type:'json'
    })













